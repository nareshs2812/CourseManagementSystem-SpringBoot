{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  setLoading(true);\n  setError('');\n  try {\n    const res = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    });\n    const contentType = res.headers.get('content-type');\n    const data = contentType !== null && contentType !== void 0 && contentType.includes('application/json') ? await res.json() : await res.text();\n    if (!res.ok) {\n      throw new Error((data === null || data === void 0 ? void 0 : data.error) || data || 'Login failed');\n    }\n\n    // Store required values\n    localStorage.setItem('userId', data.userId);\n    localStorage.setItem('userName', data.userName);\n    if (data.token) localStorage.setItem('token', data.token);\n    if (data.role) localStorage.setItem('role', data.role);\n\n    // Navigate based on role\n    if (data.role === 'ROLE_ADMIN') {\n      navigate('/adminhome');\n    } else if (data.role === 'ROLE_USER') {\n      navigate('/courses');\n    } else {\n      throw new Error('Unknown user role');\n    }\n  } catch (err) {\n    setError(err.message);\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setLoading","setError","res","fetch","method","headers","body","JSON","stringify","form","contentType","get","data","includes","json","text","ok","Error","error","localStorage","setItem","userId","userName","token","role","navigate","err","message"],"sources":["D:/CMS Spring Project/CMS-frontend/cms_frontend/src/components/LoginForm.jsx"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n  setLoading(true);\n  setError('');\n  try {\n    const res = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(form),\n    });\n\n    const contentType = res.headers.get('content-type');\n    const data = contentType?.includes('application/json') ? await res.json() : await res.text();\n\n    if (!res.ok) {\n      throw new Error(data?.error || data || 'Login failed');\n    }\n\n    // Store required values\n    localStorage.setItem('userId', data.userId);\n    localStorage.setItem('userName', data.userName);\n    if (data.token) localStorage.setItem('token', data.token);\n    if (data.role) localStorage.setItem('role', data.role);\n\n    // Navigate based on role\n    if (data.role === 'ROLE_ADMIN') {\n      navigate('/adminhome');\n    } else if (data.role === 'ROLE_USER') {\n      navigate('/courses');\n    } else {\n      throw new Error('Unknown user role');\n    }\n\n  } catch (err) {\n    setError(err.message);\n  } finally {\n    setLoading(false);\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,UAAU,CAAC,IAAI,CAAC;EAChBC,QAAQ,CAAC,EAAE,CAAC;EACZ,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAGR,GAAG,CAACG,OAAO,CAACM,GAAG,CAAC,cAAc,CAAC;IACnD,MAAMC,IAAI,GAAGF,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEG,QAAQ,CAAC,kBAAkB,CAAC,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,CAAC,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;IAE5F,IAAI,CAACb,GAAG,CAACc,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,KAAK,KAAIN,IAAI,IAAI,cAAc,CAAC;IACxD;;IAEA;IACAO,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAER,IAAI,CAACS,MAAM,CAAC;IAC3CF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAER,IAAI,CAACU,QAAQ,CAAC;IAC/C,IAAIV,IAAI,CAACW,KAAK,EAAEJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,IAAI,CAACW,KAAK,CAAC;IACzD,IAAIX,IAAI,CAACY,IAAI,EAAEL,YAAY,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACY,IAAI,CAAC;;IAEtD;IACA,IAAIZ,IAAI,CAACY,IAAI,KAAK,YAAY,EAAE;MAC9BC,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MAAM,IAAIb,IAAI,CAACY,IAAI,KAAK,WAAW,EAAE;MACpCC,QAAQ,CAAC,UAAU,CAAC;IACtB,CAAC,MAAM;MACL,MAAM,IAAIR,KAAK,CAAC,mBAAmB,CAAC;IACtC;EAEF,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZzB,QAAQ,CAACyB,GAAG,CAACC,OAAO,CAAC;EACvB,CAAC,SAAS;IACR3B,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}